// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.833
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Layout(title string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\" class=\"light\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\"><meta http-equiv=\"Pragma\" content=\"no-cache\"><meta http-equiv=\"Expires\" content=\"0\"><title>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(title)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `components/layout.templ`, Line: 12, Col: 17}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</title><link rel=\"stylesheet\" href=\"/static/css/style.css?v=1.7\"><link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&amp;display=swap\"><style>\n\t\t\t\t/* Встроенные стили, которые гарантированно применятся */\n\t\t\t\t.container {\n\t\t\t\t\tmax-width: 900px !important;\n\t\t\t\t\twidth: 75% !important;\n\t\t\t\t\tmargin: 0 auto;\n\t\t\t\t\tpadding: 2rem;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Плавная анимация для всех элементов при смене темы */\n\t\t\t\t*, *::before, *::after {\n\t\t\t\t\ttransition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease, box-shadow 0.3s ease;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Оптимизация анимации для списков */\n\t\t\t\tul, li {\n\t\t\t\t\ttransition: color 0.3s ease !important;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Отключаем анимацию для некоторых свойств, чтобы избежать задержек */\n\t\t\t\t.list-disc, .pl-5, .space-y-1, .mb-4 {\n\t\t\t\t\ttransition: none !important;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Специальные стили для оптимизированных списков */\n\t\t\t\t.theme-optimized-list {\n\t\t\t\t\ttransition: none !important;\n\t\t\t\t\twill-change: contents;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.theme-optimized-item {\n\t\t\t\t\ttransition: color 0.15s ease !important;\n\t\t\t\t\twill-change: color;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Анимация только для цвета текста в списках */\n\t\t\t\t.list-disc li {\n\t\t\t\t\ttransition: color 0.3s ease !important;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Анимация для карточек опыта работы */\n\t\t\t\t.experience-card {\n\t\t\t\t\ttransition: transform 0.2s ease, box-shadow 0.2s ease, background-color 0.3s ease, border-color 0.3s ease;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.experience-card:hover {\n\t\t\t\t\ttransform: translateY(-3px);\n\t\t\t\t\tbox-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05) !important;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Анимация для мини-карточек технологий */\n\t\t\t\t.tech-badge {\n\t\t\t\t\ttransition: transform 0.2s ease, background-color 0.2s ease;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.tech-badge:hover {\n\t\t\t\t\ttransform: translateY(-2px);\n\t\t\t\t\tbackground-color: var(--badge-hover-bg, hsl(var(--primary))) !important;\n\t\t\t\t\tcolor: var(--badge-hover-text, hsl(var(--primary-foreground))) !important;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Анимация для мини-карточек навыков */\n\t\t\t\t.skill-badge {\n\t\t\t\t\ttransition: transform 0.2s ease, background-color 0.2s ease;\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.skill-badge:hover {\n\t\t\t\t\ttransform: translateY(-2px);\n\t\t\t\t\tbackground-color: hsl(var(--primary)) !important;\n\t\t\t\t\tcolor: hsl(var(--primary-foreground)) !important;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Цвета шапки */\n\t\t\t\theader {\n\t\t\t\t\tbackground-color: hsl(210, 100%, 20%) !important;\n\t\t\t\t\tcolor: white !important;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.dark header {\n\t\t\t\t\tbackground-color: hsl(210, 80%, 15%) !important;\n\t\t\t\t\tcolor: white !important;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Гарантируем, что весь текст в шапке будет белым */\n\t\t\t\theader h1, \n\t\t\t\theader h2, \n\t\t\t\theader p, \n\t\t\t\theader a, \n\t\t\t\theader span {\n\t\t\t\t\tcolor: white !important;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\theader a {\n\t\t\t\t\topacity: 0.9;\n\t\t\t\t\ttransition: opacity 0.2s ease;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\theader a:hover {\n\t\t\t\t\ttext-decoration: underline;\n\t\t\t\t\topacity: 1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Убеждаемся, что иконки тоже белые */\n\t\t\t\theader svg {\n\t\t\t\t\tstroke: white !important;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.skills-container {\n\t\t\t\t\tgrid-template-columns: repeat(auto-fill, minmax(250px, 1fr)) !important;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.languages-list {\n\t\t\t\t\tgrid-template-columns: repeat(auto-fill, minmax(180px, 1fr)) !important;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@media (max-width: 1200px) {\n\t\t\t\t\t.container {\n\t\t\t\t\t\twidth: 85% !important;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@media (max-width: 992px) {\n\t\t\t\t\t.container {\n\t\t\t\t\t\twidth: 90% !important;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@media (max-width: 768px) {\n\t\t\t\t\t.container {\n\t\t\t\t\t\twidth: 100% !important;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t</style><script src=\"https://cdn.tailwindcss.com\"></script><script>\n\t\t\t\ttailwind.config = {\n\t\t\t\t\tdarkMode: 'class',\n\t\t\t\t\ttheme: {\n\t\t\t\t\t\textend: {\n\t\t\t\t\t\t\tcolors: {\n\t\t\t\t\t\t\t\tborder: \"hsl(var(--border))\",\n\t\t\t\t\t\t\t\tinput: \"hsl(var(--input))\",\n\t\t\t\t\t\t\t\tring: \"hsl(var(--ring))\",\n\t\t\t\t\t\t\t\tbackground: \"hsl(var(--background))\",\n\t\t\t\t\t\t\t\tforeground: \"hsl(var(--foreground))\",\n\t\t\t\t\t\t\t\tprimary: {\n\t\t\t\t\t\t\t\t\tDEFAULT: \"hsl(var(--primary))\",\n\t\t\t\t\t\t\t\t\tforeground: \"hsl(var(--primary-foreground))\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tsecondary: {\n\t\t\t\t\t\t\t\t\tDEFAULT: \"hsl(var(--secondary))\",\n\t\t\t\t\t\t\t\t\tforeground: \"hsl(var(--secondary-foreground))\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tdestructive: {\n\t\t\t\t\t\t\t\t\tDEFAULT: \"hsl(var(--destructive))\",\n\t\t\t\t\t\t\t\t\tforeground: \"hsl(var(--destructive-foreground))\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tmuted: {\n\t\t\t\t\t\t\t\t\tDEFAULT: \"hsl(var(--muted))\",\n\t\t\t\t\t\t\t\t\tforeground: \"hsl(var(--muted-foreground))\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\taccent: {\n\t\t\t\t\t\t\t\t\tDEFAULT: \"hsl(var(--accent))\",\n\t\t\t\t\t\t\t\t\tforeground: \"hsl(var(--accent-foreground))\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcard: {\n\t\t\t\t\t\t\t\t\tDEFAULT: \"hsl(var(--card))\",\n\t\t\t\t\t\t\t\t\tforeground: \"hsl(var(--card-foreground))\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tborderRadius: {\n\t\t\t\t\t\t\t\tlg: \"var(--radius)\",\n\t\t\t\t\t\t\t\tmd: \"calc(var(--radius) - 2px)\",\n\t\t\t\t\t\t\t\tsm: \"calc(var(--radius) - 4px)\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfontFamily: {\n\t\t\t\t\t\t\t\tsans: ['Montserrat', 'sans-serif'],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfontWeight: {\n\t\t\t\t\t\t\t\tnormal: 500,\n\t\t\t\t\t\t\t\tmedium: 500,\n\t\t\t\t\t\t\t\tsemibold: 600,\n\t\t\t\t\t\t\t\tbold: 700,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t</script><script defer src=\"https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js\"></script></head><body class=\"bg-background text-foreground font-sans font-medium\"><div class=\"container mx-auto px-4 py-8\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</div><script src=\"/static/js/main.js\"></script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
